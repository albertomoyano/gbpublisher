name: Update Downloads Page

on:
  release:
    types: [published]

jobs:
  update-downloads:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get release info
        id: release_info
        run: |
          echo "Obteniendo info del release..."
          TAG=$(jq -r .release.tag_name $GITHUB_EVENT_PATH)
          DATE=$(jq -r .release.published_at $GITHUB_EVENT_PATH | cut -d'T' -f1)
          BODY=$(jq -r .release.body $GITHUB_EVENT_PATH | tr '\n' ' ' | cut -c1-200)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "date=$DATE" >> $GITHUB_OUTPUT
          echo "body=$BODY" >> $GITHUB_OUTPUT

      - name: Update downloads.md
        run: |
          FILE="docs/downloads.md"

          echo "Actualizando $FILE con tag ${{ steps.release_info.outputs.tag }}"

          # Construir URL de descarga .deb
          DEB_URL="https://github.com/${{ github.repository }}/releases/download/${{ steps.release_info.outputs.tag }}/gbadocmagazine_${{ steps.release_info.outputs.tag }}-0ubuntu1_all.deb"

          # Reemplazar línea wget con nueva URL
          sed -i "s|wget .*|wget ${DEB_URL}|" "$FILE"

          # Verificar si la versión ya está en historial
          if ! grep -q "${{ steps.release_info.outputs.tag }}" "$FILE"; then
            echo "" >> "$FILE"
            echo "| ${{ steps.release_info.outputs.tag }} | ${{ steps.release_info.outputs.date }} | ${{ steps.release_info.outputs.body }} |" >> "$FILE"
            echo "Se agregó versión al historial."
          else
            echo "La versión ya está en el historial, no se agrega."
          fi

      - name: Commit and push if changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add docs/downloads.md

          if git diff --cached --quiet; then
            echo "No hay cambios para commitear."
          else
            git commit -m "🤖 Actualizar downloads.md para la versión ${{ steps.release_info.outputs.tag }}"
            git push
            echo "Cambios enviados correctamente."
          fi
