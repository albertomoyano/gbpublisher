' Gambas module file

Public Sub CerrarTodo()

  ' --- Debug / estado ---
  If Not IsNull(m_OnOff_y_Red.meConn) Then
  Endif

  ' Guardar el tiempo ANTES de cerrar la conexión
  m_Timer.DetenerContador()

  ' Borramos carpetas del caché
  FMain.TerminalViewProyecto.Input("rm -rf " & User.Home & "/.local/share/org.gambas.*" & "\n")
  FMain.TerminalViewProyecto.Input("clear" & "\n")
  Wait 0.2

  ' Detiene el proceso Bash (intentos cortos, no bloqueantes)
  If FMain.$Bash And FMain.$Bash.State = Process.Running Then
    Dim tries As Integer = 0
    While FMain.$Bash.State = Process.Running And tries < 20
      FMain.$Bash.Kill
      Wait 0.05
      tries = tries + 1
    Wend

    If FMain.$Bash.State = Process.Running Then
      FMain.$Bash.Terminate
      Wait 0.2
      If FMain.$Bash.State = Process.Running Then
        m_Sonido.sonar("Warning")
        Message.Warning("El proceso no pudo ser detenido.")
      Endif
    Endif
  Endif

  ' Cierra la conexión a la BBDD si existe y está abierta
  If Not IsNull(m_OnOff_y_Red.meConn) Then
    If m_OnOff_y_Red.meConn.Opened Then
      m_OnOff_y_Red.meConn.Close()
    Endif
    m_OnOff_y_Red.meConn = Null
  Endif

  ' Cerrar UI y salir
  FMain.Close
  Quit

Catch
  ' Aquí cae cualquier error ocurrido arriba; lo logueamos y hacemos una limpieza mínima.
  Print "Error en CerrarTodo: " & Error.Text & "  (" & Error.Where & ")"

  ' Intento de limpieza mínimo (no garantizado si hay errores graves)
  If Not IsNull(m_OnOff_y_Red.meConn) Then
    If m_OnOff_y_Red.meConn.Opened Then
      Try m_OnOff_y_Red.meConn.Close()
    Endif
    m_OnOff_y_Red.meConn = Null
  Endif

  ' Forzamos salida para no quedar en estado inconsistente
  Quit

End

Public Sub DirectorioOcultoApp()

  ' Lista de rutas que necesitas verificar/crear
  Dim rutasNecesarias As String[] = [
    User.Home & "/.gbpublisher",
    User.Home & "/.gbpublisher/manual",
    User.Home & "/.gbpublisher/manual/img",
    User.Home & "/.gbpublisher/xsl",
    User.Home & "/.gbpublisher/fonts",
    User.Home & "/.gbpublisher/lua",
    User.Home & "/.gbpublisher/csl",
    User.Home & "/.gbpublisher/luapropios",
    User.Home & "/.gbpublisher/python",
    User.Home & "/.gbpublisher/estadisticaspython"

  ]

  ' Verificar y crear rutas si no existen
  For Each rutaDirSys As String In rutasNecesarias
    If Not Exist(rutaDirSys) Then
      Try Mkdir rutaDirSys  ' ← Intenta crear el directorio
      If Error Then
        m_Sonido.sonar("Error")
        Message.Error("Error al intentar crear los directorios del sistema.")
      Endif
    End If
  Next

  ' 'copiamos los archivos de configuracion general
  If Not File.RealPath(User.Home & "/.gbpublisher/.ips.txt") Then
    Copy "ips.txt" To User.Home & "/.gbpublisher/.ips.txt"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/estadisticaspython/prueba.py") Then
    Copy "prueba.py" To User.Home & "/.gbpublisher/estadisticaspython/prueba.py"
  End If
  If Not File.RealPath(User.Home & "/.gbadoc/lua/filtro-pandoc.lua") Then
    Copy "filtro-pandoc.lua" To User.Home & "/.gbpublisher/lua/filtro-pandoc.lua"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/lua/filtro-editorial.lua") Then
    Copy "filtro-editorial.lua" To User.Home & "/.gbpublisher/lua/filtro-editorial.lua"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/lua/figure-bold-filter.lua") Then
    Copy "figure-bold-filter.lua" To User.Home & "/.gbpublisher/lua/figure-bold-filter.lua"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/lua/section-refs.lua") Then
    Copy "section-refs.lua" To User.Home & "/.gbpublisher/lua/section-refs.lua"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/fonts/georgia.ttf") Then
    Copy "./georgia.ttf" To User.Home & "/.gbpublisher/fonts/georgia.ttf"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/fonts/georgiab.ttf") Then
    Copy "./georgiab.ttf" To User.Home & "/.gbpublisher/fonts/georgiab.ttf"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/fonts/georgiai.ttf") Then
    Copy "./georgiai.ttf" To User.Home & "/.gbpublisher/fonts/georgiai.ttf"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/fonts/georgiaz.ttf") Then
    Copy "./georgiaz.ttf" To User.Home & "/.gbpublisher/fonts/georgiaz.ttf"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/csl/apa.csl") Then
    Copy "./apa.csl" To User.Home & "/.gbpublisher/csl/apa.csl"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/csl/ieee.csl") Then
    Copy "./ieee.csl" To User.Home & "/.gbpublisher/csl/ieee.csl"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/csl/mla.csl") Then
    Copy "./mla.csl" To User.Home & "/.gbpublisher/csl/mla.csl"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/csl/vancouver.csl") Then
    Copy "./vancouver.csl" To User.Home & "/.gbpublisher/csl/vancouver.csl"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/buscador.py") Then
    Copy "./buscador.py" To User.Home & "/.gbpublisher/buscador.py"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/python/contador.py") Then
    Copy "./contador.py" To User.Home & "/.gbpublisher/python/contador.py"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/python/repeticiones.py") Then
    Copy "./repeticiones.py" To User.Home & "/.gbpublisher/python/repeticiones.py"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/python/verificar.py") Then
    Copy "./verificar.py" To User.Home & "/.gbpublisher/python/verificar.py"
  End If
  If Not File.RealPath(User.Home & "/.gbpublisher/python/footnotes.py") Then
    Copy "./footnotes.py" To User.Home & "/.gbpublisher/python/footnotes.py"
  End If

End
