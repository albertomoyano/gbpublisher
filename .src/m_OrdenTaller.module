' Gambas module file

Private ContenidoOT As Result
Private id_proyecto As Integer
Private RutaProyecto As String = File.Dir(FMain.txtProyecto.Text)
Private NombreBaseProyecto As String = File.BaseName(FMain.txtProyecto.Text)

Public Function CargarOrdenTaller() As Boolean

  Dim sSQL As String

  ' Ya no necesitas JOIN con proyectos porque origen_ot YA tiene el nombre
  sSQL = "SELECT ot.*, " &
    "m.imagen_tapita, " &
    "m.revista_titulo " &
    "FROM orden_taller ot " &
    "LEFT JOIN metadatos m ON ot.id_proyecto = m.id_proyecto " &
    "WHERE ot.id_proyecto = &1"

  ContenidoOT = m_ConexionBD.mConn.Exec(sSQL, FMain.id_proyecto.Value)

  If ContenidoOT.Available Then
    With FMain
      .txtCabeceraOT.Text = NullToString(ContenidoOT["cabecera_ot"])
      .txtOrigenOT.Text = NullToString(ContenidoOT["origen_ot"])  ' Ya es el nombre directamente
      .txtProveedorOT.Text = NullToString(ContenidoOT["proveedor_ot"])
      .txtCopiasOT.Value = ContenidoOT["copias_ot"]
      .txtImagenTapaOT.Text = NullToString(ContenidoOT["imagen_tapita"])
      .txtTituloOT.Text = NullToString(ContenidoOT["revista_titulo"])
      .txtPaginasOT.Value = ContenidoOT["paginas_ot"]
      .txtFormatoOT.Text = NullToString(ContenidoOT["formato_ot"])
      .txtTintasInteriorOT.Text = NullToString(ContenidoOT["tintas_interior_ot"])
      .txtPapelInteriorOT.Text = NullToString(ContenidoOT["papel_interior_ot"])
      .txtEncuadernacionOT.Text = NullToString(ContenidoOT["encuadernacion_ot"])
      .txtTintasTapaOT.Text = NullToString(ContenidoOT["tintas_tapa_ot"])
      .txtPapelTapaOT.Text = NullToString(ContenidoOT["papel_tapa_ot"])
      .txtRevestimientoOT.Text = NullToString(ContenidoOT["revestimiento_ot"])
      .txtArchAdjunto1.Text = NullToString(ContenidoOT["arch_adjunto1"])
      .txtArchAdjunto2.Text = NullToString(ContenidoOT["arch_adjunto2"])
      .txtNotasOT.Text = NullToString(ContenidoOT["notas_ot"])
    End With
    Return True
  Else
    Return False
  Endif

Catch
  m_Sonido.sonar("Error")
  Message.Error("Error al cargar orden de taller: " & Error.Text)
  Return False

End

' Función auxiliar para convertir NULL a string vacío
Private Function NullToString(valor As Variant) As String

  If IsNull(valor) Then
    Return ""
  Else
    Return valor
  Endif

End

' Función auxiliar para convertir strings vacíos a Null
Public Function ValorONull(valor As String) As Variant

  If Trim(valor) = "" Then Return Null
  Return valor

End

Public Sub GuardarOrdenTaller()

  ContenidoOT = m_ConexionBD.mConn.Edit("orden_taller", "id_proyecto=" & FMain.id_proyecto.Value)

  If Not ContenidoOT.Available Then
    m_Sonido.sonar("Error")
    Message.Error("No se encontró la tabla orden_taller para editar.")
    Return
  Endif

  ContenidoOT!cabecera_ot = ValorONull(FMain.txtCabeceraOT.Text)
  ContenidoOT!proveedor_ot = ValorONull(FMain.txtProveedorOT.Text)
  ContenidoOT!copias_ot = ValorONull(FMain.txtCopiasOT.Value)
  ContenidoOT!paginas_ot = ValorONull(FMain.txtPaginasOT.value)
  ContenidoOT!formato_ot = ValorONull(FMain.txtFormatoOT.Text)
  ContenidoOT!tintas_interior_ot = ValorONull(FMain.txtTintasInteriorOT.Text)
  ContenidoOT!papel_interior_ot = ValorONull(FMain.txtPapelInteriorOT.Text)
  ContenidoOT!encuadernacion_ot = ValorONull(FMain.txtEncuadernacionOT.Text)
  ContenidoOT!tintas_tapa_ot = ValorONull(FMain.txtTintasTapaOT.Text)
  ContenidoOT!papel_tapa_ot = ValorONull(FMain.txtPapelTapaOT.Text)
  ContenidoOT!revestimiento_ot = ValorONull(FMain.txtRevestimientoOT.Text)
  ContenidoOT!arch_adjunto1 = ValorONull(FMain.txtArchAdjunto1.Text)
  ContenidoOT!arch_adjunto2 = ValorONull(FMain.txtArchAdjunto2.Text)
  ContenidoOT!notas_ot = ValorONull(FMain.txtNotasOT.Text)

  ContenidoOT.Update
  m_ConexionBD.mConn.Commit()

  ContenidoOT = Null

  m_Sonido.sonar("Info")
  Message.Info("Cambios guardados correctamente.")

End

Public Sub GenerarSalidaPDF()

  Dim sLaTeX As String
  Dim outputFileLaTeX As String
  Dim outputFilePDF As String
  Dim ProyectoTeX As String

  ' Definir ruta de salida .tex
  ProyectoTeX = RutaProyecto &/ "salidas/pdf/orden_taller_" & NombreBaseProyecto & ".tex"

  ' Crear el contenido LaTeX
  sLaTeX = GenerarContenidoLaTeX()

  ' Guardar archivo LaTeX temporal
  File.Save(ProyectoTeX, sLaTeX)

  ' Compilar LaTeX a PDF
  ComplilarLaTeX(ProyectoTeX)

Catch
  m_Sonido.sonar("Error")
  Message.Error("Error al generar PDF: " & Error.Text)

End

Private Function GenerarContenidoLaTeX() As String

  Dim s As String

  s &= "\\documentclass[11pt]{article}" & "\n"
  s &= "\\usepackage[paperwidth=210mm,paperheight=297mm,top=26mm,bottom=20mm,left=20mm,right=20mm,marginparsep=6mm,marginparwidth=44mm,headsep=0pt,headheight=0pt,footskip=0pt,footnotesep=13.5pt plus 0.1pt minus 0.1pt]{geometry}" & "\n"
  s &= "\\usepackage[absolute]{textpos}" & "\n"
  s &= "\\TPMargin{0mm}" & "\n"
  s &= "\\usepackage[spanish,es-ucroman,es-noshorthands]{babel}" & "\n"
  s &= "\\usepackage[autostyle=true]{csquotes}" & "\n"
  s &= "\\usepackage{graphicx}" & "\n"
  s &= "\\usepackage{fontspec}" & "\n"
  s &= "\\usepackage{microtype}" & "\n"
  s &= "\\newfontfeature{Microtypography}{protrusion=default;expansion=default}" & "\n"
  s &= "\\directlua{fonts.protrusions.setups.default.factor=.5}" & "\n"
  s &= "\\renewcommand{\\normalsize}{\\fontsize{11pt}{14.5pt}\\selectfont}" & "\n"
  s &= "\\topskip=14.5pt" & "\n"
  s &= "\\linespread{1.2}" & "\n"
  s &= "\\setmainfont{Libertinus Serif}[Numbers={OldStyle,Proportional},Ligatures=TeX,Scale=1.0]" & "\n"
  s &= "\\setsansfont{IBMPlexSansCondensed}[Scale=0.92,Ligatures=TeX,Extension=.otf,UprightFont=*-Regular,ItalicFont=*-Italic,BoldFont=*-SemiBold,BoldItalicFont=*-SemiBoldItalic]" & "\n"
  s &= "\\setmonofont{IBMPlexMono.otf}[Scale=0.92,Extension=.otf,UprightFont=*-Regular,ItalicFont = IBMPlexMono-Italic.otf,BoldFont = IBMPlexMono-Bold.otf,BoldItalicFont = IBMPlexMono-BoldItalic.otf]" & "\n"
  s &= "\\newcommand\\titulo[1]{\\sf\\Large{\\textbf{#1}}}" & "\n"
  s &= "\\newcommand\\subtitulo[1]{\\sf\\large{#1}}" & "\n"
  s &= "\\newcommand\\texto[1]{\\rm\\normalsize{#1}}" & "\n"
  s &= "\\newcommand\\foot[1]{\\sf\\footnotesize{#1}}" & "\n"
  s &= "\\usepackage{url}" & "\n"
  s &= "\\def\\UrlFont{\\tt\\footnotesize}" & "\n"

  s &= "\\begin{document}" & "\n"
  s &= "\\thispagestyle{empty}" & "\n"
  s &= "\\noindent\\rule{\\textwidth}{0.4pt}\\\\" & gb.NewLine
  s &= "\\noindent \\titulo{Orden de Taller: " & FMain.txtOrigenOT.Text & "}\\\\" & gb.NewLine
  s &= "\\noindent \\subtitulo{Proveedor: " & FMain.txtProveedorOT.Text & "}\\\\" & gb.NewLine
  s &= "\\noindent \\subtitulo{Copias impresas: " & FMain.txtCopiasOT.Value & "}\\\\" & gb.NewLine & gb.NewLine
  s &= "\\noindent \\subtitulo{Título: \\emph{" & FMain.txtTituloOT.Text & "}}\\\\" & gb.NewLine
  s &= "\\noindent \\subtitulo{Autor(es): " & FMain.txtAutorOT.Text & "}\\\\" & gb.NewLine
  s &= "\\noindent \\subtitulo{Cantidad de páginas: " & FMain.txtPaginasOT.Value & "}\\\\" & gb.NewLine
  s &= "\\noindent \\subtitulo{Formato de corte: " & FMain.txtFormatoOT.Text & "}\\\\" & gb.NewLine
  s &= "\\noindent \\subtitulo{Tintas de interior: " & FMain.txtTintasInteriorOT.Text & "}\\\\" & gb.NewLine
  s &= "\\noindent \\subtitulo{Papel de interior: " & FMain.txtPapelInteriorOT.Text & "}\\\\" & gb.NewLine
  s &= "\\noindent \\subtitulo{Encuadernación: " & FMain.txtEncuadernacionOT.Text & "}\\\\" & gb.NewLine
  s &= "\\noindent \\subtitulo{Tintas de tapa: " & FMain.txtTintasTapaOT.Text & "}\\\\" & gb.NewLine
  s &= "\\noindent \\subtitulo{Revestimiento: " & FMain.txtRevestimientoOT.Text & "}\\\\" & gb.NewLine
  s &= "\\noindent \\subtitulo{Archivo de tapa: \\textbf{" & FMain.txtArchAdjunto1.Text & "}}\\\\" & gb.NewLine
  s &= "\\noindent \\subtitulo{Archivo de interiores: \\textbf{" & FMain.txtArchAdjunto2.Text & "}}\\\\" & gb.NewLine & gb.NewLine & gb.NewLine
  s &= "\\linespread{1.0}" & "\n"
  s &= "\\noindent \\subtitulo{\\textbf{Observaciones}}\\\\" & gb.NewLine
  s &= "\\texto{" & FMain.txtNotasOT.Text & "}\\\\" & gb.NewLine
  '
  ' cabecera
  s &= "\\begin{textblock*}{170mm}(14mm,10mm)" & "\n"
  If FMain.txtCabeceraOT.Text <> "" Then
    s &= "\\includegraphics[width=170mm]{" & RutaProyecto & "/media/" & FMain.txtCabeceraOT.Text & "}" & "\n"
  Else
    s &= "\\includegraphics[width=170mm]{" & User.Home & "/.gbpublisher/falta-cabecera.png}" & "\n"
  Endif
  s &= "\\end{textblock*}" & "\n"
  '
  ' tapita
  s &= "\\begin{textblock*}{44mm}(140mm,36mm)" & "\n"
  If FMain.txtImagenTapaOT.Text <> "" Then
    s &= "\\setlength{\\fboxsep}{0pt}"
    s &= "\\fbox{\\includegraphics[width=44mm]{" & RutaProyecto &/ "media" &/ FMain.txtImagenTapaOT.Text & "}}" & "\n"
  Else
    s &= "\\includegraphics[width=44mm]{" & User.Home & "/.gbpublisher/falta-tapa.png}" & "\n"
  Endif
  s &= "\\end{textblock*}" & "\n"

  'pie de página
  s &= "\\vfill" & gb.NewLine
  s &= "\\noindent\\foot{\\textbf{Disclaimer:} Esta página no forma parte del contenido oficial del libro. La misma se generó para proporcionar al taller de imprenta instrucciones y comentarios. Asegúrese de revisar las observaciones aquí indicadas antes de realizar la impresión y no dude en ponerse en contacto con la editorial si encuentra un problema en el trabajo.}" & gb.NewLine & gb.NewLine
  s &= "\\noindent\\foot{\\textbf{Fecha de emisión de esta OT:} \\today}" & gb.NewLine & gb.NewLine
  s &= "\\end{document}" & gb.NewLine

  Return s

End

Private Sub ComplilarLaTeX(ProyectoTeX As String)

  Dim compilar As String = "latexmk -l -f -outdir=./salidas/pdf --interaction=nonstopmode -pdflatex=lualatex -pdflua " & ProyectoTeX

  FMain.TabPanel2.Index = 0
  FMain.TerminalViewProyecto.Input(compilar & "\n")
  Wait 2

  BoorarArchivoAuxiliares()

End

Private Sub BoorarArchivoAuxiliares()

  FMain.TabPanel2.Index = 0
  FMain.TerminalViewProyecto.Input("cd " & RutaProyecto & "/salidas/pdf" & "\n")
  Wait 0.1
  FMain.TerminalViewProyecto.Input("rm -rf *.aux *.log *.tex *.fdb_latexmk *.fls" & "\n")
  Wait 0.1
  FMain.TerminalViewProyecto.Input("cd " & RutaProyecto & "\n")
  Wait 0.1
  FMain.TerminalViewProyecto.Input("clear\n")

End
