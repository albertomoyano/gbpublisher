' Gambas class file

Private Contenido As Result
Private rutaScripts As String = User.Home &/ ".gbadoc/estadisticaspython"

Public Sub Form_Open()

  CargarNotas()
  CargarScripts()

  With TableViewEstadisticas
    .Header = True
    .Grid = True
    .Columns.Count = 62

    ' Configuración de columnas
    For i As Integer = 0 To 61
      Select Case i
        Case 0
          .Columns[i].Title = "id"
          .Columns[i].Width = 80
        Case 1
          .Columns[i].Title = "Proyecto"
          .Columns[i].Width = 800
        Case Else
          .Columns[i].Title = ""
          .Columns[i].Width = 0
      End Select
    Next
  End With

End

' Función para cargar y actualizar la grilla
Public Sub CargarNotas()

  Contenido = m_OnOff_y_Red.meConn.Exec("SELECT * FROM revistas ORDER BY id DESC")
  TableViewEstadisticas.Rows.Count = Contenido.Count
  TableViewEstadisticas.Refresh()

End

Public Sub Button3Estadisticas_Click()

  Me.Close

End

Public Sub Form_Close()

  Me.Close

End

Public Sub TableViewEstadisticas_Data(Row As Integer, Column As Integer)

  If (Contenido <> Null) Then
    If Row >= 0 Then
      Contenido.moveTo(Row)
      Try TableViewEstadisticas.Data.Text = Str(Contenido[Column])
    Endif
  Endif

End

Public Sub CargarDatos(Consulta As String, Grid As GridView)

  Dim i As Integer

  ' Ejecutar la consulta
  Contenido = m_OnOff_y_Red.meConn.Exec(Consulta)

  ' Si no hay resultados
  If Contenido.Count = 0 Then
    Message.Info("No se ha encontrado ningún resultado.")
    Return
  Endif

  ' Limpiar el Grid antes de mostrar los resultados
  Grid.Clear()
  Grid.Rows.Count = Contenido.Count

  ' Llenar el Grid con los resultados
  For i = 0 To Contenido.Count - 1
    For j As Integer = 0 To Grid.Columns.Count - 1
      Grid[i, j].Text = Contenido[j]
    Next
    Contenido.MoveNext
  Next

End

Public Sub CargarScripts()

  Dim archivos As String[]
  Dim archivo As String

  ' Verificar que el directorio existe
  If Not Exist(rutaScripts) Then
    Message.Error("El directorio no existe: " & rutaScripts)
    Return
  Endif

  ' Verificar que ComboBox existe
  If ComboBox2Estadisticas = Null Then
    Print "Error: ComboBox2Estadisticas es Null"
    Return
  Endif

  ComboBox2Estadisticas.Clear

  ' Usar RDir en lugar de Dir para evitar problemas de estado
  archivos = RDir(rutaScripts, "*.py", gb.File)

  If archivos.Count > 0 Then
    For Each archivo In archivos
      ComboBox2Estadisticas.Add("Script [" & archivo & "]")
    Next
  Else
    Message.Info("No se encontraron archivos .py")
  Endif

End

Public Sub EjecutarScript()

  Dim rutaScript As String

  ' Verificar que hay un script seleccionado
  If ComboBox2Estadisticas.Index = -1 Then
    Message.Warning("Selecciona un script primero")
    Return
  Endif

  ' Obtener la ruta del script seleccionado
  ' Extraer el nombre del archivo del texto entre corchetes
  Dim textoSeleccionado As String = ComboBox2Estadisticas.Text
  Dim nombreArchivo As String
  Dim inicio As Integer
  Dim fin As Integer

  inicio = InStr(textoSeleccionado, "[")
  fin = InStr(textoSeleccionado, "]")

  If inicio > 0 And fin > inicio Then
    nombreArchivo = Mid(textoSeleccionado, inicio + 1, fin - inicio - 1)
    rutaScript = User.Home &/ ".gbadoc/estadisticaspython" &/ nombreArchivo
  Else
    Message.Error("No se pudo determinar el archivo de python")
    Return
  Endif

  ' Verificar que el script existe
  If Not Exist(rutaScript) Then
    Message.Error("El script de python no existe: " & rutaScript)
    Return
  Endif

  ' Ejecutar el comando Python
  FMain.TerminalViewProyecto.Input("python3 " & rutaScript & "\n")

End

Public Sub ComboBox2Estadisticas_Click()

  EjecutarScript()

End