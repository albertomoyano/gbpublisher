' Gambas module file

Public meConn As Connection

Public Function OnRed() As Connection

  Dim sDbPath As String

  meConn = New Connection
  meConn.Type = "sqlite3"

  ' Obtener la ruta desde Settings, si no existe usar la por defecto
  sDbPath = Settings["Database/Path", User.Home & "/.gbadoc"]
  meConn.Host = sDbPath

  meConn.Name = "gbadoc.sqlite"
  meConn.Open()
  ' PRAGMA después de abrir y ANTES del return
  meConn.Exec("PRAGMA journal_mode=DELETE;")
  Return meConn
Catch
  Message.Error("Imposible abrir la base de datos en: " & sDbPath)

End

' Public Function OnRed() As Connection
'
'   meConn = New Connection
'   meConn.Type = "sqlite3"
'   meConn.Host = User.Home & "/.gbadoc"
'   meConn.Name = "gbadoc.sqlite"
'   meConn.Open()
'
'   ' PRAGMA después de abrir y ANTES del return
'   meConn.Exec("PRAGMA journal_mode=DELETE;")
'
'   Return meConn
'
' Catch
'   Message.Error("Imposible abrir la base de datos")
'
' End

Public Sub OffRed() As Connection

  meConn.Close
  meConn = Null

End

Public Sub CerrarTodo()

  ' Ahora realizamos las operaciones que podrían fallar
  Try FMain.TerminalViewProyecto.Input("rm -rf " & User.Home & "/.local/share/org.gambas.*" & "\n")
  Try FMain.TerminalViewProyecto.Input("clear" & "\n")
  Wait 0.2
  ' Detener el proceso Bash
  If FMain.$Bash And If FMain.$Bash.State = Process.Running Then
    Try FMain.$Bash.Kill
    Wait 0.2
    If FMain.$Bash.State = Process.Running Then
      Try FMain.$Bash.Terminate
      Wait 0.2
      If FMain.$Bash.State = Process.Running Then
        Message.Warning("El proceso no pudo ser detenido.")
      Endif
    Endif
  Endif
  ' Limpiar la interfaz
  FMain.txtProyecto.Text = ""
  FMain.DirViewProyecto.Root = User.Home
  ' Finalmente cerrar la conexión y salir
  Try meConn.Close
  Quit

End
