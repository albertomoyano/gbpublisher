' Gambas module file

Public ContenidoGlo As Result

Public Sub ConfigurarTableViewGlosarioEnCurso(grid As GridView)

  With grid
    .Header = True
    .Grid = True
    .Columns.Count = 11  ' Podés ajustar según la cantidad de campos que quieras mostrar

    ' Configuración de columnas
    For i As Integer = 0 To 10
      Select Case i
        Case 0
          .Columns[i].Title = "Id"
          .Columns[i].Width = 0             ' Oculto
        Case 1
          .Columns[i].Title = "Id Proyecto"
          .Columns[i].Width = 0             ' Oculto
        Case 2
          .Columns[i].Title = "Clave"
          .Columns[i].Width = 200
        Case 3
          .Columns[i].Title = "Tipo"
          .Columns[i].Width = 100
        Case 4
          .Columns[i].Title = "Nombre"
          .Columns[i].Width = 150
        Case 5
          .Columns[i].Title = "Descripción"
          .Columns[i].Width = 250
        Case 6
          .Columns[i].Title = "Primera letra"
          .Columns[i].Width = 100
        Case 7
          .Columns[i].Title = "Texto"
          .Columns[i].Width = 250
        Case 8
          .Columns[i].Title = "Primera plural"
          .Columns[i].Width = 100
        Case 9
          .Columns[i].Title = "Plural"
          .Columns[i].Width = 100
        Case 10
          .Columns[i].Title = "Orden"
          .Columns[i].Width = 80
        Case Else
          .Columns[i].Title = ""
          .Columns[i].Width = 0
      End Select
    Next
  End With

End

Public Sub MostrarSiglasEnTableViewGlosarioEnCurso(iRow As Integer)

  With FMain
    .id_sigla.Value = .gvSiglasEnCurso[iRow, 0].Text
    .id_proyecto.Value = .gvSiglasEnCurso[iRow, 1].Text
    .txtClaveGlosario.Text = .gvSiglasEnCurso[iRow, 2].Text
    .cmbTipoDeEntradaGlosario.Text = .gvSiglasEnCurso[iRow, 3].Text
    .txtNameGlosario.Text = .gvSiglasEnCurso[iRow, 4].Text
    .txtDescripcionGlosario.Text = .gvSiglasEnCurso[iRow, 5].Text
    .txtFirstGlosario.Text = .gvSiglasEnCurso[iRow, 6].Text
    .txtTextGlosario.Text = .gvSiglasEnCurso[iRow, 7].Text
    .txtFirstPluraIGlosario.Text = .gvSiglasEnCurso[iRow, 8].Text
    .txtPluralGlosario.Text = .gvSiglasEnCurso[iRow, 9].Text
    .txtSortGlosario.Text = .gvSiglasEnCurso[iRow, 10].Text
  End With

End

Public Sub RefrescarTableViewGlosarioEnCurso()

  Dim rSigla As Result
  Dim iRow As Integer
  Dim iCol As Integer

  rSigla = m_ConexionBD.mConn.Exec("SELECT * FROM siglas WHERE id_proyecto = &1 ORDER BY id DESC", FMain.id_proyecto.Text)

  ' Limpiar el GridView siempre
  FMain.gvSiglasEnCurso.Clear

  ' Si no hay datos, establecer el grid vacío y salir
  If rSigla = Null Or rSigla.Count = 0 Then
    FMain.gvSiglasEnCurso.Rows.Count = 0
    FMain.gvSiglasEnCurso.Columns.Count = 0
    Return
  Endif

  ' Configurar columnas y filas
  FMain.gvSiglasEnCurso.Columns.Count = rSigla.Fields.Count
  FMain.gvSiglasEnCurso.Rows.Count = rSigla.Count
  FMain.gvSiglasEnCurso.MoveTo(0, 0)

  ' Poblar los datos del resultado en el GridView
  iRow = 0
  For Each rSigla
    For iCol = 0 To rSigla.Fields.Count - 1
      If IsNull(rSigla[iCol]) Then
        FMain.gvSiglasEnCurso[iRow, iCol].Text = ""
      Else
        FMain.gvSiglasEnCurso[iRow, iCol].Text = rSigla[iCol]
      Endif
    Next
    iRow += 1
  Next

End

Public Sub LimpiarTextboxSigla()

  FMain.txtClaveGlosario.Text = ""
  FMain.cmbTipoDeEntradaGlosario.Text = "sigla"
  FMain.txtNameGlosario.Text = ""
  FMain.txtDescripcionGlosario.Text = ""
  FMain.txtFirstGlosario.Text = ""
  FMain.txtTextGlosario.Text = ""
  FMain.txtFirstPluraIGlosario.Text = ""
  FMain.txtPluralGlosario.Text = ""
  FMain.txtSortGlosario.Text = ""

End

Public Sub GuardarCamposSigla()

  ContenidoGlo!id = FMain.id_sigla.Value
  ContenidoGlo!id_proyecto = FMain.id_proyecto.Value
  ContenidoGlo!clave_glosario = Trim(FMain.txtClaveGlosario.Text)
  ContenidoGlo!tipo_de_entrada_glosario = FMain.cmbTipoDeEntradaGlosario.Text
  ContenidoGlo!name_glosario = Trim(FMain.txtNameGlosario.Text)
  ContenidoGlo!descripcion_glosario = Trim(FMain.txtDescripcionGlosario.Text)
  ContenidoGlo!first_glosario = Trim(FMain.txtFirstGlosario.Text)
  ContenidoGlo!text_glosario = Trim(FMain.txtTextGlosario.Text)
  ContenidoGlo!first_plural_glosario = Trim(FMain.txtFirstPluraIGlosario.Text)
  ContenidoGlo!plural_glosario = Trim(FMain.txtPluralGlosario.Text)
  ContenidoGlo!sort_glosario = Trim(FMain.txtSortGlosario.Text)

End

Public Sub GuardarSiglaPrimeraVez()

  ContenidoGlo = m_ConexionBD.mConn.Create("siglas")

  GuardarCamposSigla()
  ContenidoGlo.Update
  m_ConexionBD.mConn.Commit()
  RefrescarTableViewGlosarioEnCurso()
  FMain.gvSiglasEnCurso.Refresh
  m_Sonido.sonar("Info")
  Message.Info("La entrada se guardó con éxito.")

Catch
  m_Sonido.sonar("Error")
  Message.Error("Error al intentar guardar la entrada: " & Error.Text)

End

Public Sub GuardarCambiosSigla()

  ContenidoGlo = m_ConexionBD.mConn.Edit("siglas", "id=" & FMain.id_sigla.Value)

  If Not ContenidoGlo.Available Then
    m_Sonido.sonar("Error")
    Message.Error("No se encontró la referencia para editar.")
    Return
  Endif

  GuardarCamposSigla()
  ContenidoGlo.Update
  m_ConexionBD.mConn.Commit()
  RefrescarTableViewGlosarioEnCurso()
  m_Sonido.sonar("Info")
  Message.Info("Cambios guardados correctamente.")

  FMain.btnNuevoGlosario.Visible = True
  FMain.btnGuardarGlosario.Visible = False
  FMain.btnGuardarCambiosGlosario.Visible = False
  FMain.btnBorrarGlosario.Visible = False

Catch
  m_Sonido.sonar("Error")
  Message.Error("Error al guardar los cambios: " & Error.Text)

End

Public Sub NuevoGlosario()

  ' Verificar si hay un proyecto activo
  If Trim(FMain.txtProyecto.Text) = "" Then
    m_Sonido.sonar("Info")
    Message.Info("No hay un proyecto en curso.")
    Return
  Else
    ' limpiamos los textbox al iniciar una nueva carga
    LimpiarTextboxSigla()

    ' Solo si hay proyecto se ejecuta lo siguiente:
    Dim Idn As Integer
    Dim MaxId As Variant

    MaxId = m_ConexionBD.mConn.Exec("SELECT MAX(id) FROM siglas LIMIT 1")

    If MaxId["MAX(id)"] = Null Then
      Idn = 0
    Else
      Idn = CInt(MaxId["MAX(id)"]) + 1
    Endif

    FMain.id_sigla.Value = Idn

    FMain.tbPanelGlosarios.Index = 1
    FMain.txtTMPglosario.Enabled = True
    FMain.txtTMPglosario.Font = Font["Monospace"]
    FMain.txtTMPglosario.Background = Color.White
    FMain.txtTMPglosario.SetFocus

    FMain.btnNuevoGlosario.Visible = False
    FMain.btnGuardarGlosario.Visible = True
    FMain.btnGuardarCambiosGlosario.Visible = False
    FMain.btnBorrarGlosario.Visible = False
  Endif

End

Public Sub GuardarGlosarioPrimeraVez()

  ' Verificar que hay una texto en la clavebib
  If Trim(FMain.txtClaveGlosario.Text) = "" Then
    m_Sonido.sonar("Info")
    Message.Info("Debe generar una clave.\nNo es posible guardar la entrada.")
    Return
  Endif

  ContenidoGlo = m_ConexionBD.mConn.Exec("SELECT * FROM siglas WHERE name_glosario = &1 AND id_proyecto = &2", Trim(FMain.txtNameGlosario.Text), FMain.id_proyecto.Value)

  ' Verificar si se encontraron resultados en la consulta
  If ContenidoGlo.Count > 0 Then
    m_Sonido.sonar("Error")
    Message.Error("La sigla o glosario que desea agregar ya existe en este libro/revista.")
    Return ' Salir de la función si el título ya existe
  Endif

  m_Siglas.GuardarSiglaPrimeraVez()
  m_Siglas.RefrescarTableViewGlosarioEnCurso()
  m_Siglas.LimpiarTextboxSigla()
  FMain.gvSiglasEnCurso.Refresh

  FMain.txtTMPglosario.Enabled = False
  FMain.txtTMPglosario.Background = Color.Background
  FMain.txtTMPglosario.Clear
  FMain.tbPanelGlosarios.Index = 0

  FMain.btnNuevoGlosario.Visible = True
  FMain.btnGuardarGlosario.Visible = False
  FMain.btnGuardarCambiosGlosario.Visible = False
  FMain.btnBorrarGlosario.Visible = False

Catch
  m_Sonido.sonar("Error")
  Message.Error("Se obtuvo el siguiente error al intentar guardar: <b>" & Error.Text & "</b>.")

End

Public Sub BorrarGlosario()

  Dim buscarEliminar As Result

  'Chequeamos primero que se haya elegido una entrada
  If FMain.id_sigla.Text = "" Then
    m_Sonido.sonar("Info")
    Message.Info("Debe primero seleccionarse la entrada a borrar.")
    Return
  Endif

  m_Sonido.sonar("Question")
  If Message.Question("¿Desea borrar la entrada?", "Si", "No") = 1 Then
    buscarEliminar = m_ConexionBD.mConn.Exec("delete from siglas where id=" & FMain.id_sigla.Value)
  Endif

  m_siglas.LimpiarTextboxSigla()
  m_siglas.RefrescarTableViewGlosarioEnCurso()
  FMain.gvSiglasEnCurso.Refresh

  FMain.btnNuevoGlosario.Visible = True
  FMain.btnGuardarGlosario.Visible = False
  FMain.btnGuardarCambiosGlosario.Visible = False
  FMain.btnBorrarGlosario.Visible = False

End

Public Sub IniciarSiglas()

  Dim gloSQL As String

  LimpiarTextboxSigla()
  gloSQL = "SELECT * FROM siglas WHERE id_proyecto = &1 ORDER BY id DESC"
  ContenidoGlo = m_ConexionBD.mConn.Exec(gloSQL, FMain.id_proyecto.Value)
  If ContenidoGlo.Available Then
    FMain.gvSiglasEnCurso.Clear
    FMain.gvSiglasEnCurso.Rows.Count = ContenidoGlo.Count
    FMain.gvSiglasEnCurso.Refresh
  Else
    FMain.gvSiglasEnCurso.Rows.Count = 0
  Endif

End
