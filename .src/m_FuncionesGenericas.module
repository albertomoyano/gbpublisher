' Gambas module file

Private ArticulosIDs As Collection

Public Sub VerificarURLDesdeCampo(campo As TextBox)

  Dim sURL As String
  Dim sResult As String
  Dim iExitCode As Integer

  ' Mostrar indicador de carga
  FMain.Mouse = Mouse.Wait

  sURL = Trim(campo.Text)
  If sURL = "" Then
    Message.Error("Por favor, ingrese una URL válida.")
    campo.SetFocus
    FMain.Mouse = Mouse.Default
    Return
  Endif

  ' Ejecutar curl para obtener el código HTTP
  Shell "curl -s -o /dev/null -w '%{http_code}' -L --connect-timeout 5 --max-time 10 -A 'Mozilla/5.0' " & Quote(sURL) To sResult
  iExitCode = Process.LastValue

  ' Restaurar el cursor
  FMain.Mouse = Mouse.Default

  ' Evaluar el código HTTP
  Select Case sResult
    Case "200"
      Message.Info("La <b>URL existe</b> y respondió con código 200.")
    Case "301", "302"
      Message.Info("La <b>URL fue redireccionada</b> y respondió con código " & sResult & ".")
    Case "404"
      Message.Error("La <b>URL no existe</b> (404 Not Found).")
    Case "500", "503"
      Message.Error("<b>Error del servidor</b> (" & sResult & "). Intente nuevamente más tarde.")
    Case "000"
      Message.Error("Tiempo de espera agotado o no se pudo conectar al servidor.")
    Case Else
      Message.Error("Código de respuesta desconocido: <b>" & sResult & "</b>.")
  End Select

End

' Función para validar un número ISBN
Public Sub EsISBNValido(ISBN As String) As Boolean
  ' Elimina los guiones o espacios en blanco del número ISBN

  ISBN = Replace(ISBN, "-", "")
  ISBN = Replace(ISBN, " ", "")

  ' Comprueba si el ISBN tiene 10 o 13 dígitos
  If Len(ISBN) <> 10 And Len(ISBN) <> 13 Then
    Return False
  End If

  ' Comprueba si el último dígito de verificación es válido
  Dim Suma As Integer
  Dim UltimoDigito As Integer
  Dim Factor As Integer

  If Len(ISBN) = 10 Then
    Factor = 10
    For i As Integer = 1 To 9
      Suma += Val(Mid(ISBN, i, 1)) * Factor
      Factor -= 1
    Next
    Dim UltimoChar As String = Mid(ISBN, 10, 1)
    If UltimoChar = "X" Then
      UltimoDigito = 10
    Else
      UltimoDigito = Val(UltimoChar)
    End If

  Else If Len(ISBN) = 13 Then
    Factor = 1
    For i As Integer = 1 To 12
      Suma += Val(Mid(ISBN, i, 1)) * Factor
      Factor = IIf(Factor = 1, 3, 1)
    Next
    UltimoDigito = Val(Mid(ISBN, 13, 1))
  End If

  Dim DigitoVerificacion As Integer
  DigitoVerificacion = 10 - (Suma Mod 10)

  Return UltimoDigito = DigitoVerificacion

End

' Función para validar formato ISSN y dígito de control
Public Sub IsValidISSN(sISSN As String) As Boolean
  ' Eliminar guiones si existen

  sISSN = Replace(sISSN, "-", "")

  ' Verificar que tenga 8 caracteres
  If Len(sISSN) <> 8 Then Return False

  ' Verificar que los primeros 7 caracteres sean dígitos
  Dim i As Integer
  For i = 1 To 7
    If Not IsDigit(Mid(sISSN, i, 1)) Then Return False
  Next

  ' Verificar que el último carácter sea un dígito o "X"
  Dim sLastChar As String = Mid(sISSN, 8, 1)
  If Not (IsDigit(sLastChar) Or sLastChar = "X") Then Return False

  ' Calcular el dígito de control
  Dim suma As Integer = 0
  Dim peso As Integer = 8
  For i = 1 To 7
    suma += Val(Mid(sISSN, i, 1)) * peso
    peso -= 1
  Next

  ' Calcular el dígito de control esperado
  Dim digitoControl As Integer = 11 - (suma Mod 11)
  Dim digitoEsperado As String

  If digitoControl = 11 Then
    digitoEsperado = "0"
  Else If digitoControl = 10 Then
    digitoEsperado = "X"
  Else
    digitoEsperado = Str(digitoControl)
  Endif

  ' Comparar el dígito de control calculado con el último carácter del ISSN
  Return digitoEsperado = sLastChar

End

Public Sub VerificarDOI(campo As TextBox)

  Dim sURL As String
  Dim sDOI As String
  Dim sResult As String
  Dim iExitCode As Integer

  ' Mostrar indicador de carga
  FMain.Mouse = Mouse.Wait

  sURL = Trim(campo.Text)

  If sURL = "" Then
    Message.Error("Por favor, ingresar un DOI válido.")
    FMain.Mouse = Mouse.Default
    Return
  Endif

  ' Extraer el DOI puro (sin el prefijo https://doi.org/)
  If Left(sURL, 16) = "https://doi.org/" Then
    sDOI = Mid(sURL, 17) ' Extraer desde el carácter 17 en adelante
  Else If Left(sURL, 15) = "http://doi.org/" Then
    sDOI = Mid(sURL, 16) ' Extraer desde el carácter 16 en adelante
  Else
    sDOI = sURL ' Ya es un DOI puro
  Endif

  ' Construir URL completa para validación
  sURL = "https://doi.org/" & sDOI

  ' Comando curl con límite de tiempo y otras mejoras
  Shell "curl -s -o /dev/null -w '%{http_code}' -L --connect-timeout 5 --max-time 10 -A 'Mozilla/5.0'" & " " & Quote(sURL) To sResult
  iExitCode = Process.LastValue

  ' Restaurar el cursor
  FMain.Mouse = Mouse.Default

  ' Evaluar código de estado HTTP
  Select Case sResult
    Case "200"
      ' DOI válido - actualizar el campo con el DOI puro
      campo.Text = sDOI
      Message.Info("El <b>DOI es válido</b> y respondió con código 200.")
    Case "301", "302"
      ' DOI redireccionado pero válido - actualizar el campo con el DOI puro
      campo.Text = sDOI
      Message.Info("El <b>DOI fue redireccionado</b> y respondió con código " & sResult & ".")
    Case "404"
      Message.Error("El <b>DOI no existe</b> y respondió con código 404 Not Found.")
    Case "500", "503"
      Message.Error("<b>Error del servidor</b> (" & sResult & "). Intenta nuevamente más tarde.")
    Case "000"
      Message.Error("Tiempo de espera agotado o no se pudo conectar al servidor.")
    Case ""
      Message.Error("Error en la ejecución del comando. Verifica la conexión a Internet.")
    Case Else
      Message.Error("Código de respuesta: <b>" & sResult & "</b>.")
  End Select

End

Public Sub BuscarEditorialDesdeTexto()

  Dim texto As String = Trim(FMain.txtPublisher.Text)
  Dim hResult As Result

  ' Limpiar el ComboBox
  FMain.ComboBoxPublisher.Clear()

  If texto = "" Then
    FMain.ComboBoxPublisher.Visible = False
    Return
  Endif

  ' Escapar comillas simples en el texto para evitar errores SQL
  texto = Replace(texto, "'", "''")

  ' Manejar errores con Error.Clear()
  Error.Clear()

  ' Ejecutar la consulta
  hResult = m_OnOff_y_Red.meConn.Exec("SELECT DISTINCT txtPublisher FROM bibtex WHERE txtPublisher LIKE '%" & texto & "%' ORDER BY txtPublisher")

  If Error Then
    Print "Error en la consulta: "; Error.Text
    FMain.ComboBoxPublisher.Visible = False
    Error.Clear()
    Return
  Endif

  ' Llenar el ComboBox con los resultados
  While hResult.Available
    If hResult["txtPublisher"] <> Null And Trim(hResult["txtPublisher"]) <> "" Then
      FMain.ComboBoxPublisher.Add(hResult["txtPublisher"])
    Endif
    hResult.MoveNext()
  Wend

  ' Mostrar el ComboBox si hay resultados
  If FMain.ComboBoxPublisher.Count > 0 Then
    FMain.ComboBoxPublisher.Visible = True
  Else
    FMain.ComboBoxPublisher.Visible = False
  Endif

End

Public Sub BuscarInstitucionDesdeTexto()

  Dim texto As String = Trim(FMain.txtInstitution.Text)
  Dim hResult As Result

  ' Limpiar el ComboBox
  FMain.ComboBoxInstitution.Clear()

  If texto = "" Then
    FMain.ComboBoxInstitution.Visible = False
    Return
  Endif

  ' Escapar comillas simples en el texto para evitar errores SQL
  texto = Replace(texto, "'", "''")

  ' Manejar errores con Error.Clear()
  Error.Clear()

  ' Ejecutar la consulta
  hResult = m_OnOff_y_Red.meConn.Exec("SELECT DISTINCT txtInstitution FROM bibtex WHERE txtInstitution LIKE '%" & texto & "%' ORDER BY txtInstitution")

  If Error Then
    Print "Error en la consulta: "; Error.Text
    FMain.ComboBoxInstitution.Visible = False
    Error.Clear()
    Return
  Endif

  ' Llenar el ComboBox con los resultados
  While hResult.Available
    If hResult["txtInstitution"] <> Null And Trim(hResult["txtInstitution"]) <> "" Then
      FMain.ComboBoxInstitution.Add(hResult["txtInstitution"])
    Endif
    hResult.MoveNext()
  Wend

  ' Mostrar el ComboBox si hay resultados
  If FMain.ComboBoxInstitution.Count > 0 Then
    FMain.ComboBoxInstitution.Visible = True
  Else
    FMain.ComboBoxInstitution.Visible = False
  Endif

End

Public Sub BuscarOrganizationDesdeTexto()

  Dim texto As String = Trim(FMain.txtOrganization.Text)
  Dim hResult As Result

  ' Limpiar el ComboBox
  FMain.ComboBoxOrganization.Clear()

  If texto = "" Then
    FMain.ComboBoxOrganization.Visible = False
    Return
  Endif

  ' Escapar comillas simples en el texto para evitar errores SQL
  texto = Replace(texto, "'", "''")

  ' Manejar errores con Error.Clear()
  Error.Clear()

  ' Ejecutar la consulta
  hResult = m_OnOff_y_Red.meConn.Exec("SELECT DISTINCT txtOrganization FROM bibtex WHERE txtOrganization LIKE '%" & texto & "%' ORDER BY txtOrganization")

  If Error Then
    Print "Error en la consulta: "; Error.Text
    FMain.ComboBoxOrganization.Visible = False
    Error.Clear()
    Return
  Endif

  ' Llenar el ComboBox con los resultados
  While hResult.Available
    If hResult["txtOrganization"] <> Null And Trim(hResult["txtOrganization"]) <> "" Then
      FMain.ComboBoxOrganization.Add(hResult["txtOrganization"])
    Endif
    hResult.MoveNext()
  Wend

  ' Mostrar el ComboBox si hay resultados
  If FMain.ComboBoxOrganization.Count > 0 Then
    FMain.ComboBoxOrganization.Visible = True
  Else
    FMain.ComboBoxOrganization.Visible = False
  Endif

End

Public Sub BuscarJournalDesdeTexto()

  Dim texto As String = Trim(FMain.txtJournalTitle.Text)
  Dim hResult As Result

  ' Limpiar el ComboBox
  FMain.ComboBoxJournal.Clear()

  If texto = "" Then
    FMain.ComboBoxJournal.Visible = False
    Return
  Endif

  ' Escapar comillas simples en el texto para evitar errores SQL
  texto = Replace(texto, "'", "''")

  ' Manejar errores con Error.Clear()
  Error.Clear()

  ' Ejecutar la consulta
  hResult = m_OnOff_y_Red.meConn.Exec("SELECT DISTINCT txtJournalTitle FROM bibtex WHERE txtJournalTitle LIKE '%" & texto & "%' ORDER BY txtJournalTitle")

  If Error Then
    Print "Error en la consulta: "; Error.Text
    FMain.ComboBoxJournal.Visible = False
    Error.Clear()
    Return
  Endif

  ' Llenar el ComboBox con los resultados
  While hResult.Available
    If hResult["txtJournalTitle"] <> Null And Trim(hResult["txtJournalTitle"]) <> "" Then
      FMain.ComboBoxJournal.Add(hResult["txtJournalTitle"])
    Endif
    hResult.MoveNext()
  Wend

  ' Mostrar el ComboBox si hay resultados
  If FMain.ComboBoxJournal.Count > 0 Then
    FMain.ComboBoxJournal.Visible = True
  Else
    FMain.ComboBoxJournal.Visible = False
  Endif

End

Public Sub LlenarComboBoxArticulos()

  FMain.ComboBoxArticuloAsociado.Clear
  FMain.ComboBoxArticuloAsociadoEnbibtex.Clear
  ArticulosIDs = New Collection

  Dim rConsulta As Result
  rConsulta = m_OnOff_y_Red.meConn.Exec("SELECT id, txtArticuloTitulo FROM articulos WHERE id_revistas = &1", FMain.idMetadatoRevista.Text)

  If rConsulta.Available Then
    Repeat
      Dim titulo As String = rConsulta["txtArticuloTitulo"]
      Dim id As Integer = rConsulta["id"]

      FMain.ComboBoxArticuloAsociado.Add(titulo)
      FMain.ComboBoxArticuloAsociadoEnbibtex.Add(titulo)
      ArticulosIDs.Add(id, titulo)

      rConsulta.MoveNext()
    Until rConsulta.Available = False
  Else
    Message.Warning("No hay artículos para mostrar.")
  Endif

Catch
  Message.Error("Error al cargar artículos: " & Error.Text)

End

Public Sub ComboBoxArticuloAsociado()

  Dim tituloSeleccionado As String = FMain.ComboBoxArticuloAsociado.Text

  If ArticulosIDs.Exist(tituloSeleccionado) Then
    FMain.idArticuloAutor.Text = ArticulosIDs[tituloSeleccionado]
  Endif

End

Public Sub ComboBoxArticuloAsociadoEnbibtex()

  Dim tituloSeleccionado As String = FMain.ComboBoxArticuloAsociadoEnbibtex.Text

  If ArticulosIDs.Exist(tituloSeleccionado) Then
    FMain.idArticuloBibtex.Text = ArticulosIDs[tituloSeleccionado]
  Endif

End

Public Sub ActualizarComboBoxArticuloEnbibtexDesdeId()

  Dim titulo As String
  Dim idBuscado As String = FMain.idArticuloBibtex.Text

  For Each titulo In ArticulosIDs.Keys
    If CStr(ArticulosIDs[titulo]) = idBuscado Then
      FMain.ComboBoxArticuloAsociadoEnbibtex.Text = titulo
      Break
    Endif
  Next

End

Public Sub ActualizarComboBoxArticuloAsociadoDesdeId()

  Dim titulo As String
  Dim idBuscado As String = FMain.idArticuloAutor.Text

  For Each titulo In ArticulosIDs.Keys
    If CStr(ArticulosIDs[titulo]) = idBuscado Then
      FMain.ComboBoxArticuloAsociado.Text = titulo
      Break
    Endif
  Next

End

Public Sub ControlarCarpetas()' Lista de directorios que se deben confirmar al abrir un archivo

  Dim directorios As String[] = ["articulos", "articulos/respaldo", "docs", "files", "media", "correcciones", "originales", "salidas", "salidas/xml", "salidas/tex", "salidas/html", "salidas/tapa", "salidas/pdf", "salidas/epub", "salidas/xml/xml-indesign", "salidas/xml/xml-scielo", "salidas/xml/xml-pmd", "salidas/xml/xml-crossref", "salidas/xml/xml-doaj", ".github", ".github/workflows"]

  ' Crear los directorios si no existen
  For Each directorio As String In directorios
    If Not Exist(File.Dir(FMain.txtProyecto.Text) & "/" & directorio) Then
      Mkdir File.Dir(FMain.txtProyecto.Text) & "/" & directorio
    End If
  Next

End

Public Sub CopiarArchivosBase()

  ' Controlomanos archivos base
  ControlarCarpetas()

  ' root del proyecto
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/readme.md") Then
    Copy "./readme.md" To File.Dir(FMain.txtProyecto.Text) & "/readme.md"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/LICENSE") Then
    Copy "./LICENSE2" To File.Dir(FMain.txtProyecto.Text) & "/LICENSE"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/.github/workflows/release-epub.yml") Then
    Copy "./release-epub.yml" To File.Dir(FMain.txtProyecto.Text) & "/.github/workflows/release-epub.yml"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/.github/workflows/release-pdf.yml") Then
    Copy "./release-pdf.yml" To File.Dir(FMain.txtProyecto.Text) & "/.github/workflows/release-pdf.yml"
  End If
  ' docs
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/docs/descarga.png") Then
    Copy "./descarga.png" To File.Dir(FMain.txtProyecto.Text) & "/docs/descarga.png"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/docs/favicon.jpg") Then
    Copy "./favicon.jpg" To File.Dir(FMain.txtProyecto.Text) & "/docs/favicon.jpg"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/docs/stylesheet2.css") Then
    Copy "./stylesheet2.css" To File.Dir(FMain.txtProyecto.Text) & "/docs/stylesheet2.css"
  End If
  ' files
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/files/plantilla-ghp.html") Then
    Copy "./plantilla-ghp.html" To File.Dir(FMain.txtProyecto.Text) & "/files/plantilla-ghp.html"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/files/biblatex-APA-config.tex") Then
    Copy "./biblatex-APA-config.tex" To File.Dir(FMain.txtProyecto.Text) & "/files/biblatex-APA-config.tex"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/files/biblatex-VerboseIbid-config.tex") Then
    Copy "./biblatex-VerboseIbid-config.tex" To File.Dir(FMain.txtProyecto.Text) & "/files/biblatex-VerboseIbid-config.tex"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/files/biblatex-veronaC-config.tex") Then
    Copy "./biblatex-veronaC-config.tex" To File.Dir(FMain.txtProyecto.Text) & "/files/biblatex-veronaC-config.tex"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/files/biblatex-veronaM-config.tex") Then
    Copy "./biblatex-veronaM-config.tex" To File.Dir(FMain.txtProyecto.Text) & "/files/biblatex-veronaM-config.tex"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/files/stylesheet1.css") Then
    Copy "./stylesheet1.css" To File.Dir(FMain.txtProyecto.Text) & "/files/stylesheet1.css"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/files/pdf-preambulo.tex") Then
    Copy "./pdf-preambulo.tex" To File.Dir(FMain.txtProyecto.Text) & "/files/pdf-preambulo.tex"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/files/epub-preambulo.tex") Then
    Copy "./epub-preambulo.tex" To File.Dir(FMain.txtProyecto.Text) & "/files/epub-preambulo.tex"
  End If
  ' articulos
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/articulos/inicio-frontmatter.tex") Then
    Copy "./inicio-frontmatter.tex" To File.Dir(FMain.txtProyecto.Text) & "/articulos/inicio-frontmatter.tex"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/articulos/colofon.tex") Then
    Copy "./colofon.tex" To File.Dir(FMain.txtProyecto.Text) & "/articulos/colofon.tex"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/articulos/indiceautores.tex") Then
    Copy "./indiceautores.tex" To File.Dir(FMain.txtProyecto.Text) & "/articulos/indiceautores.tex"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/articulos/autores-libro.tex") Then
    Copy "./autores-libro.tex" To File.Dir(FMain.txtProyecto.Text) & "/articulos/autores-libro.tex"
  End If
  ' media
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/media/desconocido.png") Then
    Copy "./desconocido.png" To File.Dir(FMain.txtProyecto.Text) & "/media/desconocido.png"
  End If
  If Not File.RealPath(File.Dir(FMain.txtProyecto.Text) & "/media/logo-cabecera.png") Then
    Copy "./logo-cabecera.png" To File.Dir(FMain.txtProyecto.Text) & "/media/logo-cabecera.png"
  End If

End

Public Sub MostrarMetadatosLibro()

  FMain.HBoxComboBoxArticuloAsociadoEnbibtex.Visible = False
  FMain.HBoxcmbAutoriaLibro.Visible = True
  FMain.HBoxTipoCSL.Visible = True
  FMain.HBoxImagenTapita.Visible = True
  FMain.HBoxRevistaTitulo.Visible = True
  FMain.lblRevistaTitulo.Text = "libro-titulo: "
  FMain.HBoxRevistaAbreviatura.Visible = False
  FMain.HBoxRevistaISSN.Visible = True
  FMain.lblRevistaISSN.Text = "libro-isbn: "
  FMain.btnChequearISSNRevista.Visible = False
  FMain.btnChequearISBNLibro.Visible = True
  FMain.HBoxRevistaISSNPrint.Visible = False
  FMain.HBoxRevistaISSNOnLine.Visible = False
  FMain.HBoxRevistaDOIPrefix.Visible = False
  FMain.HBoxRevistaVolumen.Visible = True
  FMain.lblRevistaVolumen.Text = "libro-volumen: "
  FMain.HBoxRevistaNumero.Visible = False
  FMain.HBoxRevistaAnio.Visible = False
  FMain.HBoxRevistaMes.Visible = False
  FMain.HBoxRevistaEditor.Visible = False
  FMain.HBoxRevistaEditorial.Visible = True
  FMain.lblRevistaEditorial.Text = "libro-editorial: "
  FMain.HBoxRevistaPais.Visible = False
  FMain.HBoxRevistaIdioma.Visible = True
  FMain.lblRevistaIdioma.Text = "libro-idioma: "
  FMain.HBoxRevistaFrecuencia.Visible = False
  FMain.HBoxRevistaURL.Visible = True
  FMain.lblRevistaURL.Text = "libro-url: "
  FMain.HBoxRevistaEmail.Visible = False
  FMain.HBoxRevistaTipoAcceso.Visible = False
  FMain.HBoxRevistaAreaTematica.Visible = False
  FMain.HBoxRevistaIndexadaEn.Visible = False
  FMain.HBoxRevistaPoliticaEticaURL.Visible = False
  FMain.HBoxPoliticaRevisoresURL.Visible = False
  FMain.HBoxPoliticaOpenAccessURL.Visible = False
  FMain.HBoxFormatoPublicacion.Visible = False
  FMain.HBoxRevistaArchivaEn.Visible = False
  FMain.HBoxEditorJefe.Visible = False
  FMain.HBoxEditorJefeEmail.Visible = False
  FMain.HBoxEditorAsociado.Visible = False
  FMain.HBoxEditorAsociadoEmail.Visible = False
  FMain.HBoxCoordinadorEditorial.Visible = False
  FMain.HBoxCoordinadorEditorialEmail.Visible = False
  FMain.HBoxFechaRecepcionApertura.Visible = False
  FMain.HBoxFechaRecepcionCierre.Visible = False
  FMain.HBoxFechaPublicacion.Visible = True
  FMain.HBoxFechaProximaEdicion.Visible = False
  FMain.HBoxLicencia.Visible = True
  FMain.HBoxDerechosAutor.Visible = False
  FMain.HBoxDepositarioLegal.Visible = False
  FMain.HBoxtxtLibroResumenEs.Visible = True
  FMain.HBoxLibroPalabrasClaveEs.Visible = True
  FMain.HBoxLibroResumenEn.Visible = True
  FMain.HBoxLibroPalabrasClaveEn.Visible = True
  FMain.HBoxtxtLibroAutoria.Visible = True
  FMain.HBoxtxtLibroSerie.Visible = True
  FMain.HBoxtxtLibroSerieNumero.Visible = True
  FMain.HBoxtxtLibroGenero.Visible = True
  FMain.HBoxtxtLibroAudiencia.Visible = True
  FMain.txtLibroSubtitulo.Visible = True

End

Public Sub MostrarMetadatosRevista()

  FMain.HBoxComboBoxArticuloAsociadoEnbibtex.Visible = True
  FMain.HBoxcmbAutoriaLibro.Visible = False
  FMain.HBoxTipoCSL.Visible = True
  FMain.HBoxImagenTapita.Visible = True
  FMain.HBoxRevistaTitulo.Visible = True
  FMain.HBoxRevistaAbreviatura.Visible = True
  FMain.HBoxRevistaISSN.Visible = True
  FMain.lblRevistaISSN.Text = "revista-issn: "
  FMain.btnChequearISSNRevista.Visible = True
  FMain.btnChequearISBNLibro.Visible = False
  FMain.HBoxRevistaISSNPrint.Visible = True
  FMain.HBoxRevistaISSNOnLine.Visible = True
  FMain.HBoxRevistaDOIPrefix.Visible = True
  FMain.HBoxRevistaVolumen.Visible = True
  FMain.HBoxRevistaNumero.Visible = True
  FMain.HBoxRevistaAnio.Visible = True
  FMain.HBoxRevistaMes.Visible = True
  FMain.HBoxRevistaEditor.Visible = True
  FMain.HBoxRevistaEditorial.Visible = True
  FMain.HBoxRevistaPais.Visible = True
  FMain.HBoxRevistaIdioma.Visible = True
  FMain.HBoxRevistaFrecuencia.Visible = True
  FMain.HBoxRevistaURL.Visible = True
  FMain.HBoxRevistaEmail.Visible = True
  FMain.HBoxRevistaTipoAcceso.Visible = True
  FMain.HBoxRevistaAreaTematica.Visible = True
  FMain.HBoxRevistaIndexadaEn.Visible = True
  FMain.HBoxRevistaPoliticaEticaURL.Visible = True
  FMain.HBoxPoliticaRevisoresURL.Visible = True
  FMain.HBoxPoliticaOpenAccessURL.Visible = True
  FMain.HBoxFormatoPublicacion.Visible = True
  FMain.HBoxRevistaArchivaEn.Visible = True
  FMain.HBoxEditorJefe.Visible = True
  FMain.HBoxEditorJefeEmail.Visible = True
  FMain.HBoxEditorAsociado.Visible = True
  FMain.HBoxEditorAsociadoEmail.Visible = True
  FMain.HBoxCoordinadorEditorial.Visible = True
  FMain.HBoxCoordinadorEditorialEmail.Visible = True
  FMain.HBoxFechaRecepcionApertura.Visible = True
  FMain.HBoxFechaRecepcionCierre.Visible = True
  FMain.HBoxFechaPublicacion.Visible = True
  FMain.HBoxFechaProximaEdicion.Visible = True
  FMain.HBoxLicencia.Visible = True
  FMain.HBoxDerechosAutor.Visible = True
  FMain.HBoxDepositarioLegal.Visible = True
  FMain.HBoxtxtLibroResumenEs.Visible = False
  FMain.HBoxLibroPalabrasClaveEs.Visible = False
  FMain.HBoxLibroResumenEn.Visible = False
  FMain.HBoxLibroPalabrasClaveEn.Visible = False
  FMain.HBoxtxtLibroAutoria.Visible = False
  FMain.HBoxtxtLibroSerie.Visible = False
  FMain.HBoxtxtLibroSerieNumero.Visible = False
  FMain.HBoxtxtLibroGenero.Visible = False
  FMain.HBoxtxtLibroAudiencia.Visible = False
  FMain.HBoxtxtLibroSubtitulo.Visible = False

End

Public Sub BorrarArchivosAuxiliares()

  Dim DirectorioPadre As String = File.Dir(FMain.txtProyecto.Text)
  Dim DirectorioPDF As String = File.Dir(FMain.txtProyecto.Text) & "/salidas/pdf"

  ' Ejecuta en la terminal
  FMain.TerminalViewProyecto.Input("cd " & DirectorioPDF & "\n" &
    "rm -rf *.xmpi *.eledsec* *.*end *.fuse* *.bcf-SAVE-ERROR *.bbl-SAVE-ERROR *.css *.lwarpmkconf *.sidetoc *.conf *.cut *.upa *.upb *.bib.backup *.ndx *.ps *.tex.backup *.bib *.csv *.published *.dat *.txt  *.bib.sav *.xml *.html *.xhtml *.opf *.xref *.ncx *.tmp *.4ct *.4tc *.4of *.4ot *.4os *.4oy *.4oo *.4og *.lg *.idv *.acn *.acr *.alg *.glg *.gls *.ist *.bak *.log *.aux *.dvi *.lof *.lot *.bit *.idx *.glo *.bbl *.bcf *.ilg *.toc *.ind *.out *.blg *.fdb_latexmk *.fls *.run.xml *.ida *.idn *.inn *.synctex.gz *.xdy *.opf *.epub *.mobi *.ent *.cfg *.lua *.mk4 *.png *.jpg *.svg *.ttf *.woff *.woff2" & "\n" &
    "rm -rf articulos" & "\n" &
    "cd " & DirectorioPadre & "\n" &
    "rm -rf temporal.tex" & "\n")

  Wait 1

  FMain.refrecarViewFile()

End

Public Sub BuscarLocationDesdeTexto()

  Dim texto As String = Trim(FMain.txtLocation.Text)
  Dim hResult As Result

  ' Limpiar el ComboBox
  FMain.ComboBoxLocation.Clear()

  If texto = "" Then
    FMain.ComboBoxLocation.Visible = False
    Return
  Endif

  ' Escapar comillas simples en el texto para evitar errores SQL
  texto = Replace(texto, "'", "''")

  ' Manejar errores con Error.Clear()
  Error.Clear()

  ' Ejecutar la consulta
  hResult = m_OnOff_y_Red.meConn.Exec("SELECT DISTINCT txtLocation FROM bibtex WHERE txtLocation LIKE '%" & texto & "%' ORDER BY txtLocation")

  If Error Then
    Print "Error en la consulta: "; Error.Text
    FMain.ComboBoxLocation.Visible = False
    Error.Clear()
    Return
  Endif

  ' Llenar el ComboBox con los resultados
  While hResult.Available
    If hResult["txtLocation"] <> Null And Trim(hResult["txtLocation"]) <> "" Then
      FMain.ComboBoxLocation.Add(hResult["txtLocation"])
    Endif
    hResult.MoveNext()
  Wend

  ' Mostrar el ComboBox si hay resultados
  If FMain.ComboBoxLocation.Count > 0 Then
    FMain.ComboBoxLocation.Visible = True
  Else
    FMain.ComboBoxLocation.Visible = False
  Endif

End

Public Sub GitVersion(raw As String) As String 'Función para chequear si hay versiones nuevas

  Dim s As String
  Dim stx As String[]
  Dim r As String
  Dim v As String = ""

  Shell "wget -qO- '" & raw & "'" To s

  If s <> "" Then
    stx = Split(s, "\n")
    For Each r In stx
      If InStr(r, "Version=") Then
        If Split(r, "=")[0] = "Version" Then
          v = Split(r, "=")[1]
          Break
        Endif
      Endif
    Next
  Endif

  Return v

End

Public Sub BotonesInicio()

  ' Botonera bibtex
  FMain.BtnNuevoBib.Visible = True
  FMain.btnGuardarBib.Visible = False
  FMain.btnGuardarCambiosBib.Visible = False
  FMain.BtnEliminarBib.Visible = False
  FMain.btnGuardarIGUAL.Visible = False
  FMain.TabPanel5.Index = 0

  ' botonera siglas
  FMain.btnNuevoGlosario.Visible = True
  FMain.btnGuardarGlosario.Visible = False
  FMain.btnGuardarCambiosGlosario.Visible = False
  FMain.btnBorrarGlosario.Visible = False
  FMain.tbPanelGlosarios.Index = 0

  ' Botonera Tei

End
