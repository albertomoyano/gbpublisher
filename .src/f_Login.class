' Gambas class file

' ' Gambas class file
'
' Public Sub btnConectarseMy_Click()
'
'   Dim ip As String = ComboBoxIP.Text
'   Dim usuario As String = TextBoxUsuario.Text
'   Dim clave As String = TextBoxClave.Text
'   Dim iResultado As Integer
'
'   ' Validar que se haya seleccionado una IP
'   If ComboBoxIP.Index = -1 Or Trim(ip) = "" Then
'     Message.Warning("Seleccione una dirección IP de la lista")
'     ComboBoxIP.SetFocus()
'     Return
'   End If
'
'   ' Validar usuario
'   If Trim(usuario) = "" Then
'     Message.Warning("Ingrese el nombre de usuario")
'     TextBoxUsuario.SetFocus()
'     Return
'   End If
'
'   ' Validar clave
'   If Trim(clave) = "" Then
'     Message.Warning("Ingrese la contraseña")
'     TextBoxClave.SetFocus()
'     Return
'   End If
'
'   ' Validar conectividad del servidor
'   If Not ValidarConectividad(ip) Then
'     Message.Error("No se puede conectar al servidor " & ip & Chr(10) &
'       "Verifique que el servidor esté encendido y la red funcione correctamente.")
'     Return
'   End If
'
'   iResultado = m_OnOff_y_Red.OnRed(ip, usuario, clave)
'   Select Case iResultado
'     Case 1  ' Login exitoso
'       Me.Hide()
'       FMain.ShowModal()
'     Case 2  ' Usuario ya conectado - no mostrar mensaje adicional
'       ' El mensaje ya se mostró en OnRed
'     Case 3  ' Credenciales incorrectas
'       Message.Error("Usuario y/o clave incorrectos.")
'     Case Else  ' Error de conexión o consulta
'       ' El mensaje ya se mostró en OnRed
'   End Select
'
' End
'
' Private Function ValidarConectividad(ip As String) As Boolean
'
'   Dim archivo As String = "/tmp/ping_result_" & CStr(Timer)
'   Dim comando As String
'   Dim contenido As String
'
'   ' Crear comando que guarde el resultado en un archivo temporal
'   comando = "ping -c 1 -W 3 " & ip & " > " & archivo & " 2>&1; echo $? >> " & archivo
'
'   ' Ejecutar el comando
'   Try Shell comando Wait
'
'   If Error Then
'     Return False
'   End If
'
'   ' Leer el archivo de resultado
'   If Exist(archivo) Then
'     Try contenido = File.Load(archivo)
'
'     If Not Error Then
'       ' El último carácter debería ser el código de salida
'       Dim lineas As String[] = Split(contenido, "\n")
'       Dim codigoSalida As String = ""
'
'       If lineas.Count > 0 Then
'         codigoSalida = Trim(lineas[lineas.Count - 1])
'         If codigoSalida = "" And lineas.Count > 1 Then
'           codigoSalida = Trim(lineas[lineas.Count - 2])
'         End If
'       End If
'
'       ' Limpiar archivo temporal
'       Try Kill archivo
'
'       ' Código 0 significa éxito
'       Return codigoSalida = "0"
'     End If
'
'     ' Limpiar archivo temporal en caso de error
'     Try Kill archivo
'   End If
'
'   Return False
'
' End
'
' Public Sub Form_Open()
'
'   ComboBoxIP.Clear()
'   Dim rutaIPs As String = User.Home & "/.gbpivot/ips.txt"
'
'   If Exist(rutaIPs) Then
'     Dim contenidoArchivo As String
'     Try contenidoArchivo = File.Load(rutaIPs)
'
'     ' Verificar que no hubo error y el contenido no esté vacío
'     If Not Error And contenidoArchivo And Len(contenidoArchivo) > 0 Then
'       Dim linea As String
'       Dim contenido As String[] = Split(contenidoArchivo, Chr(10), "", True)
'
'       For Each linea In contenido
'         linea = Trim(linea)
'         If linea <> "" Then
'           ComboBoxIP.Add(linea)
'         End If
'       Next
'     End If
'   End If
'
'   txtLicencia1.Pos = 0
'   txtLicencia2.Pos = 0
'   txtLicencia3.Pos = 0
'
' End

' Método para recargar solo el ComboBox (extraído del Form_Open)
Public Sub CargarComboBoxIP()

  ' ComboBoxIP.Clear()
  ' Dim rutaIPs As String = User.Home & "/.gbadoc/ips.txt"
  '
  ' If Exist(rutaIPs) Then
  '   Dim contenidoArchivo As String
  '   Try contenidoArchivo = File.Load(rutaIPs)
  '
  '   If Not Error And contenidoArchivo And Len(contenidoArchivo) > 0 Then
  '     Dim linea As String
  '     Dim contenido As String[] = Split(contenidoArchivo, Chr(10), "", True)
  '
  '     For Each linea In contenido
  '       linea = Trim(linea)
  '       If linea <> "" Then
  '         ComboBoxIP.Add(linea)
  '       End If
  '     Next
  '   End If
  ' End If

End

Public Sub btnEditarIPs_Click()

  f_EditarIPs.ShowModal()

  ' Refrescar el ComboBox inmediatamente después de cerrar el modal
  CargarComboBoxIP()

End
'
' Public Sub btnCopiarInfo_Click()
'
'   If Trim(txtEquipo.Text) = "" Then
'     Message.Warning("No hay información para copiar.")
'     Return
'   End If
'
'   Clipboard.Clear
'   Clipboard.Copy(txtEquipo.Text)
'
'   Message.Info("Información del sistema copiada al portapapeles.")
'
' End

Public Sub btnCancelar_Click()

  Me.Close

End
