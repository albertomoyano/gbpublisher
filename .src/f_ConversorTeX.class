' Gambas class file

Public Sub Form_Open()

  Dim fecha As String

  fecha = Format(Date(), "yymmdd") ' Obtener la fecha actual

  txtFecha.Text = fecha

End

Public Sub btnBuscar_Click()

  Dialog.Title = "Seleccionar archivo"
  Dialog.Filter = ["*.docx", ("Archivos word"), ("Todos los archivos")]
  Dialog.AutoExt = True
  Dialog.Path = User.Home
  If Dialog.OpenFile() Then
    Return
  Else
    If Not Exist(File.Dir(Dialog.Path) & "/media") Then
      Mkdir File.Dir(Dialog.Path) & "/media"
    End If
    txtArchivoOrigen.Text = Dialog.Path
    btnCONVERTIR.Enabled = True
  Endif
Catch
  Message.Error("No se pudo abrir el archivo")

End

Public Sub Form_Close()

  Me.Close()

End

Public Sub btnSalir_Click()

  Me.Close()

End

Public Sub btnListo_Click()

  Me.Close()

End

Public Sub btnCONVERTIR_Click()

  txtArchivoOrigen.Text = Dialog.Path
  Dim rutaOrigen As String = txtArchivoOrigen.Text

  ' Validación del campo destino
  If Trim(txtArchivoDestino.Text) = "" Then
    Message.Error("El campo de Destino no puede estar vacío", "Cancelar")
    Return
  Endif

  ' Configuración de rutas
  ' Pandoc creará automáticamente una carpeta "media" dentro del directorio especificado
  Dim mediaBasePath As String = File.Dir(rutaOrigen)  ' Solo el directorio base
  Dim archivoFinal As String = File.Dir(rutaOrigen) & "/" & ComboBoxLoR.Text & txtFecha.Text & txtArchivoDestino.Text & ".tex"

  ' Validación más estricta del ComboBox
  If Trim(ComboBoxLoR.Text) = "" Or (ComboBoxLoR.Text <> "l-" And ComboBoxLoR.Text <> "r-") Then
    Message.Error("Debe seleccionar una opción válida: <b>l-</b> o <b>r-</b> para el nombre del archivo", "Error de Validación")
    Return
  Endif

  ' Verificar que el archivo origen existe
  If Not Exist(rutaOrigen) Then
    Message.Error("El archivo de origen no existe: " & rutaOrigen)
    Return
  Endif

  ' Construir comando pandoc
  ' Pandoc creará automáticamente la carpeta "media" dentro de mediaBasePath
  Dim comando As String = "pandoc " & Quote$(rutaOrigen) &
    " -o " & Quote$(archivoFinal) &
    " --from=docx --to=latex" &
    " --wrap=none" &
    " --extract-media=" & Quote$(mediaBasePath)

  ' Ejecutar comando con Shell Wait
  Try Shell comando Wait
  If Error Then
    Message.Error("Error al ejecutar pandoc: " & Error.Text & "\nComando: " & comando)
    Return
  Endif

  ' Verificar si el archivo se generó correctamente
  If Not Exist(archivoFinal) Then
    Message.Error("El archivo no se pudo generar: " & archivoFinal)
    Return
  Else
    Message.Info("El archivo se generó con éxito en: " & archivoFinal & "\nLas imágenes están en: " & mediaBasePath & "/media/")
  Endif

  ' Actualizar interfaz
  btnListo.Visible = True
  btnListo.Default = True
  btnSalir.Visible = False

End Sub

Public Sub txtArchivoDestino_KeyPress()

  ' Permitir teclas de control
  If Key.Code = Key.BackSpace Or Key.Code = Key.Delete Or
      Key.Code = Key.Left Or Key.Code = Key.Right Or
      Key.Code = Key.Tab Or Key.Code = Key.Enter Or
      Key.Code = Key.Home Or Key.Code = Key.End Then
    Return
  Endif

  ' Solo permitir letras minúsculas o mayúsculas (a-z, A-Z)
  If (Key.Text < "A" Or (Key.Text > "Z" And Key.Text < "a") Or Key.Text > "z") Then
    Stop Event
  Endif

End

Public Sub txtArchivoDestino_KeyRelease()

  Dim texto As String = UCase(txtArchivoDestino.Text)

  If Len(texto) > 12 Then
    texto = Left(texto, 12)
    Message.Warning("El nombre del archivo no puede tener más de 12 caracteres.")
  Endif

  txtArchivoDestino.Text = texto

End
